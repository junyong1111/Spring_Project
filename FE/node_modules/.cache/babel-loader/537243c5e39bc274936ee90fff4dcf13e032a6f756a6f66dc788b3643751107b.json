{"ast":null,"code":"var _jsxFileName = \"/Users/dak_kiwon/Jun/Springboot/ch6/frontend/todo-app/src/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationsService } from \"../components/api/HelloWorldApiService\";\n\n//1: Create a Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n//2: Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  //3: Put some state in the context\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n\n  //    function login(username, password){\n  //     if(username === \"PARK\" && password ===\"dummy\"){\n  //         setAuthenticated(true)\n  //         setUsername(username)\n  //         return true\n  //     }\n  //     else{\n  //         setAuthenticated(false)\n  //         setUsername(null)\n  //         return false\n  //     }\n  //    }\n\n  async function login(username, password) {\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password); // base64 인코딩\n\n    try {\n      const response = await executeBasicAuthenticationsService(baToken);\n      if (response === 200) {\n        setAuthenticated(true);\n        setUsername(username);\n        return true;\n      } else {\n        setAuthenticated(false);\n        setUsername(null);\n        return false;\n      }\n    } catch (error) {\n      setAuthenticated(false);\n      setUsername(null);\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n    setToken(null);\n    setUsername(null);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"TN8WqXx3uVoSLaFezWMtgn1oPEU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationsService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setAuthenticated","username","setUsername","token","setToken","login","password","baToken","window","btoa","response","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dak_kiwon/Jun/Springboot/ch6/frontend/todo-app/src/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationsService } from \"../components/api/HelloWorldApiService\";\n\n//1: Create a Context\nexport const AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\n//2: Share the created context with other components\nexport default function AuthProvider({ children }) {\n\n    //3: Put some state in the context\n    const [isAuthenticated, setAuthenticated] = useState(false)\n    const [username, setUsername] = useState(null)\n    const [token, setToken] = useState(null)\n\n//    function login(username, password){\n//     if(username === \"PARK\" && password ===\"dummy\"){\n//         setAuthenticated(true)\n//         setUsername(username)\n//         return true\n//     }\n//     else{\n//         setAuthenticated(false)\n//         setUsername(null)\n//         return false\n//     }\n//    }\n\n   async function login(username, password){\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password) // base64 인코딩\n    \n    try{\n        const response = await executeBasicAuthenticationsService(baToken)\n\n\n        if(response === 200){\n            setAuthenticated(true)\n            setUsername(username)\n            return true\n        }\n        else{\n            setAuthenticated(false)\n            setUsername(null)\n            return false\n        }\n    }\n    catch(error){\n        setAuthenticated(false)\n        setUsername(null)\n        return false\n    }\n    \n   }\n\n    \n\n\n    function logout() {\n        setAuthenticated(false)\n        setToken(null)\n        setUsername(null)\n    }\n\n    return (\n        <AuthContext.Provider value={ {isAuthenticated, login, logout, username, token}  }>\n            {children}\n        </AuthContext.Provider>\n    )\n} "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,kCAAkC,QAAQ,wCAAwC;;AAE3F;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAE/C;EACA,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEG,eAAegB,KAAKA,CAACJ,QAAQ,EAAEK,QAAQ,EAAC;IACvC,MAAMC,OAAO,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,GAAG,GAAG,GAAGK,QAAQ,CAAC,EAAC;;IAElE,IAAG;MACC,MAAMI,QAAQ,GAAG,MAAMpB,kCAAkC,CAACiB,OAAO,CAAC;MAGlE,IAAGG,QAAQ,KAAK,GAAG,EAAC;QAChBV,gBAAgB,CAAC,IAAI,CAAC;QACtBE,WAAW,CAACD,QAAQ,CAAC;QACrB,OAAO,IAAI;MACf,CAAC,MACG;QACAD,gBAAgB,CAAC,KAAK,CAAC;QACvBE,WAAW,CAAC,IAAI,CAAC;QACjB,OAAO,KAAK;MAChB;IACJ,CAAC,CACD,OAAMS,KAAK,EAAC;MACRX,gBAAgB,CAAC,KAAK,CAAC;MACvBE,WAAW,CAAC,IAAI,CAAC;MACjB,OAAO,KAAK;IAChB;EAED;EAKC,SAASU,MAAMA,CAAA,EAAG;IACdZ,gBAAgB,CAAC,KAAK,CAAC;IACvBI,QAAQ,CAAC,IAAI,CAAC;IACdF,WAAW,CAAC,IAAI,CAAC;EACrB;EAEA,oBACIV,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAG;MAACf,eAAe;MAAEM,KAAK;MAAEO,MAAM;MAAEX,QAAQ;MAAEE;IAAK,CAAI;IAAAN,QAAA,EAC7EA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACpB,GAAA,CA5DuBF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}